{
	"compiler": {
		"version": "0.8.17+commit.8df45f5f"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token_",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Released",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [],
				"name": "Revoked",
				"type": "event"
			},
			{
				"stateMutability": "payable",
				"type": "fallback"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "holder",
						"type": "address"
					}
				],
				"name": "computeNextVestingScheduleIdForHolder",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "vestingScheduleId",
						"type": "bytes32"
					}
				],
				"name": "computeReleasableAmount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "holder",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "computeVestingScheduleIdForAddressAndIndex",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_beneficiary",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_start",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_cliff",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_duration",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_slicePeriodSeconds",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "_revocable",
						"type": "bool"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "createVestingSchedule",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "beneficiary",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "cliff",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "start",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "duration",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "slicePeriodSeconds",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "revocable",
								"type": "bool"
							},
							{
								"internalType": "uint256",
								"name": "amount",
								"type": "uint256"
							}
						],
						"internalType": "struct SabaiVesting.VestingScheduleMany[]",
						"name": "_schedules",
						"type": "tuple[]"
					}
				],
				"name": "createVestingScheduleMany",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "holder",
						"type": "address"
					}
				],
				"name": "getLastVestingScheduleForHolder",
				"outputs": [
					{
						"components": [
							{
								"internalType": "bool",
								"name": "initialized",
								"type": "bool"
							},
							{
								"internalType": "address",
								"name": "beneficiary",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "cliff",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "start",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "duration",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "slicePeriodSeconds",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "revocable",
								"type": "bool"
							},
							{
								"internalType": "uint256",
								"name": "amountTotal",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "released",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "revoked",
								"type": "bool"
							}
						],
						"internalType": "struct SabaiVesting.VestingSchedule",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getToken",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "getVestingIdAtIndex",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "vestingScheduleId",
						"type": "bytes32"
					}
				],
				"name": "getVestingSchedule",
				"outputs": [
					{
						"components": [
							{
								"internalType": "bool",
								"name": "initialized",
								"type": "bool"
							},
							{
								"internalType": "address",
								"name": "beneficiary",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "cliff",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "start",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "duration",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "slicePeriodSeconds",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "revocable",
								"type": "bool"
							},
							{
								"internalType": "uint256",
								"name": "amountTotal",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "released",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "revoked",
								"type": "bool"
							}
						],
						"internalType": "struct SabaiVesting.VestingSchedule",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "holder",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "getVestingScheduleByAddressAndIndex",
				"outputs": [
					{
						"components": [
							{
								"internalType": "bool",
								"name": "initialized",
								"type": "bool"
							},
							{
								"internalType": "address",
								"name": "beneficiary",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "cliff",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "start",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "duration",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "slicePeriodSeconds",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "revocable",
								"type": "bool"
							},
							{
								"internalType": "uint256",
								"name": "amountTotal",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "released",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "revoked",
								"type": "bool"
							}
						],
						"internalType": "struct SabaiVesting.VestingSchedule",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getVestingSchedulesCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_beneficiary",
						"type": "address"
					}
				],
				"name": "getVestingSchedulesCountByBeneficiary",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getVestingSchedulesTotalAmount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getWithdrawableAmount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "vestingScheduleId",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "release",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "vestingScheduleId",
						"type": "bytes32"
					}
				],
				"name": "revoke",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "withdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"computeNextVestingScheduleIdForHolder(address)": {
					"details": "Computes the next vesting schedule identifier for a given holder address."
				},
				"computeReleasableAmount(bytes32)": {
					"returns": {
						"_0": "the vested amount"
					}
				},
				"computeVestingScheduleIdForAddressAndIndex(address,uint256)": {
					"details": "Computes the vesting schedule identifier for an address and an index."
				},
				"constructor": {
					"details": "Creates a vesting contract.",
					"params": {
						"token_": "address of the ERC20 token contract"
					}
				},
				"createVestingSchedule(address,uint256,uint256,uint256,uint256,bool,uint256)": {
					"params": {
						"_amount": "total amount of tokens to be released at the end of the vesting",
						"_beneficiary": "address of the beneficiary to whom vested tokens are transferred",
						"_cliff": "duration in seconds of the cliff in which tokens will begin to vest",
						"_duration": "duration in seconds of the period in which the tokens will vest",
						"_revocable": "whether the vesting is revocable or not",
						"_slicePeriodSeconds": "duration of a slice period for the vesting in seconds",
						"_start": "start time of the vesting period"
					}
				},
				"getLastVestingScheduleForHolder(address)": {
					"details": "Returns the last vesting schedule for a given holder address."
				},
				"getToken()": {
					"details": "Returns the address of the ERC20 token managed by the vesting contract."
				},
				"getVestingIdAtIndex(uint256)": {
					"details": "Returns the vesting schedule id at the given index.",
					"returns": {
						"_0": "the vesting id"
					}
				},
				"getVestingSchedule(bytes32)": {
					"returns": {
						"_0": "the vesting schedule structure information"
					}
				},
				"getVestingScheduleByAddressAndIndex(address,uint256)": {
					"returns": {
						"_0": "the vesting schedule structure information"
					}
				},
				"getVestingSchedulesCount()": {
					"details": "Returns the number of vesting schedules managed by this contract.",
					"returns": {
						"_0": "the number of vesting schedules"
					}
				},
				"getVestingSchedulesCountByBeneficiary(address)": {
					"details": "Returns the number of vesting schedules associated to a beneficiary.",
					"returns": {
						"_0": "the number of vesting schedules"
					}
				},
				"getVestingSchedulesTotalAmount()": {
					"returns": {
						"_0": "the total amount of vesting schedules"
					}
				},
				"getWithdrawableAmount()": {
					"details": "Returns the amount of tokens that can be withdrawn by the owner.",
					"returns": {
						"_0": "the amount of tokens"
					}
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"release(bytes32,uint256)": {
					"params": {
						"amount": "the amount to release",
						"vestingScheduleId": "the vesting schedule identifier"
					}
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"revoke(bytes32)": {
					"params": {
						"vestingScheduleId": "the vesting schedule identifier"
					}
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				},
				"withdraw(uint256)": {
					"params": {
						"amount": "the amount to withdraw"
					}
				}
			},
			"title": "Sabai Vesting contract",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"computeReleasableAmount(bytes32)": {
					"notice": "Computes the vested amount of tokens for the given vesting schedule identifier."
				},
				"createVestingSchedule(address,uint256,uint256,uint256,uint256,bool,uint256)": {
					"notice": "Creates a new vesting schedule for a beneficiary."
				},
				"getVestingSchedule(bytes32)": {
					"notice": "Returns the vesting schedule information for a given identifier."
				},
				"getVestingScheduleByAddressAndIndex(address,uint256)": {
					"notice": "Returns the vesting schedule information for a given holder and index."
				},
				"getVestingSchedulesTotalAmount()": {
					"notice": "Returns the total amount of vesting schedules."
				},
				"release(bytes32,uint256)": {
					"notice": "Release vested amount of tokens."
				},
				"revoke(bytes32)": {
					"notice": "Revokes the vesting schedule for given identifier."
				},
				"withdraw(uint256)": {
					"notice": "Withdraw the specified amount if possible."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/Sabai Vesting.sol": "SabaiVesting"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
			"license": "MIT",
			"urls": [
				"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
				"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
			]
		},
		"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
			"keccak256": "0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc",
			"license": "MIT",
			"urls": [
				"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010",
				"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u"
			]
		},
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
			"license": "MIT",
			"urls": [
				"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
				"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
			]
		},
		"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
			"keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
			"license": "MIT",
			"urls": [
				"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
				"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
			]
		},
		"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
			"keccak256": "0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238",
			"license": "MIT",
			"urls": [
				"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6",
				"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds"
			]
		},
		"@openzeppelin/contracts/utils/Address.sol": {
			"keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
			"license": "MIT",
			"urls": [
				"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
				"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		},
		"@openzeppelin/contracts/utils/math/Math.sol": {
			"keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
			"license": "MIT",
			"urls": [
				"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
				"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
			]
		},
		"@openzeppelin/contracts/utils/math/SafeMath.sol": {
			"keccak256": "0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e",
			"license": "MIT",
			"urls": [
				"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65",
				"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN"
			]
		},
		"contracts/Sabai Vesting.sol": {
			"keccak256": "0x8bc224a986cb2308d8abb243bf7f986754f815c460f4a68875925d048fa78152",
			"license": "MIT",
			"urls": [
				"bzz-raw://3c9fe0e87c6b7b1076e9f19ba674c75d76d207fe08252b0da0a71ae54392723d",
				"dweb:/ipfs/QmUog8qJtFiFeK8EQDFQ5NA6sDH3LiK7QfLZKeBfwqhf5v"
			]
		}
	},
	"version": 1
}